from itertools import *

'''
Первое программой.
В общем то оно у руками решается, но нашлась реально хорошая программа. 
https://www.youtube.com/watch?v=RYziH5xy4I4
Вот откуда я её взял (спасибо Эмилю)
Только одна строка сложно работает, но её можно запомнить
Сначала просто приведу программу, потом объясню, тут учить нечего
Тут данные из номера 16367 с КЕГЭ
'''
a = '246 16 57 15 347 127 356'.split()  # Соседи каждого: 'номера_соседей_первого номера_соседей_второго'
s = 'EF EB FD FC DC BG BA GA AC'.split()  # Все дороги(в одном экземпляре)

for p in permutations('ABCDEFG'):  # В кавычках все буквы
    if all(str(p.index(y) + 1) in a[p.index(x)] for x, y in s):  # Просто зазубрите строку
        # print(p)   Ответ
        # Можно сразу добавить номера пунктов необходимых, например как в этом задании нам нужны номера G и D
        print(p, p.index('G')+1, p.index('D')+1)
        # В любом случае стоит быстренько проверить ручками


'''
А теперь подробнее объясню, вам оно не обязательно, достаточно запомнить программу, она в 6 строк что угодно решит

a = 'все_соседи_пункта_1 все_соседи_пункта_2 все_соседи_пункта_3'.split()
То же самое что a = ['все_соседи_пункта_1', 'все_соседи_пункта_2', 'все_соседи_пункта_3'], но первый способ удобнее


s = 'дорога_1 дорога_2 дорога_3 дорога_4'.split()
То же самое что s = ['дорога_1', 'дорога_2', 'дорога_3', 'дорога_4'], но первый способ удобнее


a = '246 16 57 15 347 127 356'.split()
s = 'EF EB FD FC DC BG BA GA AC'.split()

for p in permutations('ABCDEFG'):  # Проверяем все варианты расстановок пунктов(в кавычках все буквы пунктов)
    if all(str(p.index(y) + 1) in a[p.index(x)] for x, y in s):  Проверяем что при такой расстановке все работает
        Если номер второго конца дороги находятся в соседях первого конца дороги
        p.index(y) - номер буквы в нашей расстановке. +1 так как с нуля номера.

        a[p.index(x)] получает всех соседей другого конца дороги
        Если наш  найденный номер в соседях номера второго, то условие выполнится.
        Если оно выполнится для всех дорог, то расстановка нам подходит, печатаем её.
        print(p)
'''