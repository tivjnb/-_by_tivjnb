'''
Это полный гайд по 14 заданию.
Здесь есть пару основных типов
1)Несколько чисел в како-то системе счисления с пропущенными цифрами, надо что-то в десятичной
2)Сложная операция в десятичной, надо результат в другую и что-то с ним делать
Оба типа сложности не представляют
'''

'''
Для типа 1 мы просто перебираем неизвестные, переводим числа в десятичную, совершаем операцию, 
а дальше уже от задания зависит
Основной принцип перевода из системы с основанием n в систему с основанием 10:

abcdef(n) = a*(n**5) + b*(n**4) + c*(n**3) + d*(n**2) + e*(n**1) + f*(n**0) 
[Последние два слагаемых можно записать как e*n + f]

То есть мы каждую цифру, начиная с конца домножаем на n**(номера цифры с конца -1)
Можно писать ручками, так я и буду объяснять, но кто я такой, что бы не дать программу
'''


def from_n_to_ten(ch: list, n):  # Соответственно функция, по переводу из любой в 10,
    # ждет на вход список цифр(сразу int-ованых и основание системы счисления
    r = 0  # Для результата
    for i in range(len(ch)):  # Проходимся столько раз, какой длины число
        '''
        ch[-i-1] потому что нам проще идти с конца. Не просто -i, а -i -1 потому, что range с нуля, а нужен -1 элемент
        n**i ну та сама система счисления в степени, тут просто i так как оно и начинается с нуля
        '''
        r += ch[-i-1] * (n**i)
    return r


'''
Это самая простая
№ 15328 Досрочная волна 2024 (Уровень: Базовый)
Операнды арифметического выражения записаны в системе счисления с основанием 27.
123x24(27) + 135x78(27)

В записи чисел переменной x обозначена неизвестная цифра из алфавита 27-ричной системы счисления. 
Определите наибольшее значение x, при котором значение данного арифметического выражения кратно 26. 
Для найденного значения x вычислите частное от деления значения арифметического выражения на 26 
и укажите его в ответе в десятичной системе счисления. Основание системы счисления указывать не нужно.
Тут x ограничен системой счисления а именно 0 - 26
'''

for x in range(0, 27):
    a = 1*(27**5) + 2*(27**4) + 3*(27**3) + x*(27**2) + 2*27 + 4  # Просто считаем число 1
    b = 1*(27**5) + 3*(27**4) + 5*(27**3) + x*(27**2) + 7*27 + 8  # Число 2
    if (a+b) % 26 == 0:  # Если сумма кратна, то выводим
        print(f"Номер 15328: {(a + b) // 26}")  # тут нужно последнее


'''
А это сложная
№ 9918 (Уровень: Сложный)
(С. Чайкин) Дано арифметическое выражение: 
73x1y(67) + 49y6(x)
В записи чисел переменными y обозначены неизвестные цифры из допустимого алфавита для указанных систем счисления. 
Определите, сколько различных значений может принимать выражение при всех возможных x и y

Тут x ограничен снизу максимальной цифрой второго выражения, а сверху системой счисления первого. 10 - 66
А у ограничен двумя системами счисления, но так как x < 67, то мы говорим что у это 0 - (x-1)
'''
s = set()  # Сказано различных, так что лишним не будет, а дальше так же
for x in range(10, 67):
    for y in range(0, x):
        a = 7 * (67**4) + 3 * (67**3) + x * (67**2) + 1 * 67 + y
        b = 4 * (x**3) + 9 * (x**2) + y * x + 6
        s.add(a+b)
print(f"Номер 9918: {len(s)}")


'''
Ну и СтатГрад до кучи.
AB267D1(p)
и
F024A89(p)
При каком минимальном p их сумма делится на (p-1)
Буквы у нас это продолжение цифр 0 1 2 3 4 5 6 7 8 9 A(10) B(11) C(12) D(13) E(14) F(15)
Так что сами числа делаем как раньше
'''
for p in range(16, 1000):  # От 16 потому что есть цифра 15(F)
    a = 1  # Я не хочу сейчас все писать, простите
    b = 1  # Я Прощаю тебя
    if (a + b) % (p - 1) == 0:  # Если сумма кратна (p - 1)
        print(f"СтатГрад: {p}")  # То выводим p
        break  # Нужен минимальный, поэтому break


'''
Тип номер 2 это когда трехэтажное выражение в 10, а потом нужно в другую и какое-то свойства
Перевод из 10 в любую, это остатки от деления этого числа на систему счисления в обратном порядке
Тут функция может пригодится, я напишу базированую, для меньше 10. Если туда дать больше 10, то остаток от деления может 
получиться больше 10, а соответственно он запишет, например "11", а не "B".
Но зачастую нам нужно не само число, а его цифры, 
соответственно мы просто работаем с остатком от деления сразу (скоро поймете поймете)
'''
def from_ten_to_les_than_ten(ch, n):  # Получает число в десятичной и основание
    # (если основание больше 10, то может не сработать)
    a = ''  # Для числа
    while ch > 0:  # Пока оставшее больше 0
        a = str(ch % n) + a  # Добавляем в начало строки остаток от деления на основание
        ch = ch // n  # Ну и делим число на основание
    return a


'''
№ 15327 Досрочная волна 2024 (Уровень: Базовый)
Определите в 27-ричной записи числа количество цифр с числовым значением, превышающим 9:
Выражение же в питоне смотрите
'''

a = 3 * (2187**2020) + 3 * (729**2021) - 2 * (81**2022) + 27**2023 - 4 * (3**2024) - 2029  # Считаем всю эту бурду
count = 0  # Счетчик
while a > 0:
    if (a % 27) > 9:  # Нам незачем записывать число в 27, просто проверяем что цифра больше 9
        count += 1
    a = a // 27  # а тут так же
print(f"Номер 15327: {count}")

'''
И сложную
№ 3775 Вариант от учеников (Уровень: Сложный)
Значение выражения ____ записали в некоторой системе счисления.
Оказалось, что количество цифр 8 в этой записи максимально.
Найдите эту систему счисления и запишите её в ответе в десятичной системе счисления. Если таких несколько, укажите ту, 
у которой числовое значение больше.
'''
a = 39 * (15**64) + (35**450) + 74 * (43**121) - 450035  # Так же выражение
m = 0  # Будем сохранять максимальное количество 8
m_osn = 0  # И при какой это системе счисления
for s_s in range(10, 100):  # До 100 должно хватить
    b = a  # Нам само A менять не стоит, оно нам ещё пригодится
    count = 0  # Счетчик восьмерок
    while b > 0:  # тут так же
        if (b % s_s) == 8:  # Если 8
            count += 1  # То +1
        b = b // s_s
    if count >= m:  # Ну и если 8 получилось больше, то обновляем максы
        m = count
        m_osn = s_s
print(f"Номер 3775: {m_osn}")
